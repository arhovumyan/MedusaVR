# Production Docker Compose - Security Hardened
services:
  backend:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - PORT=5002
      - FIREBASE_SERVICE_ACCOUNT_KEY_PATH=/app/service-account.json
      # Security configurations
      - NODE_TLS_REJECT_UNAUTHORIZED=1
      - UV_THREADPOOL_SIZE=128
      # Network timeout configurations
      - HTTP_TIMEOUT=30000
      - WEBSOCKET_TIMEOUT=30000
      # WebSocket specific configuration
      - DEEPGRAM_USE_DOCKER_WORKAROUND=true
    volumes:
      - ./service-account.json:/app/service-account.json:ro
      # Mount SSL certificates if using HTTPS in backend
      - ./ssl:/app/ssl:ro
    env_file: .env
    networks:
      - medusavr-network
    restart: always
    # Security: Run as non-root user
    user: "1000:1000"
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  frontend:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.client.prod
      args:
        VITE_API_URL: "https://medusavr.art/api"
        VITE_SOCKET_URL: "https://medusavr.art"
        VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY}
        VITE_FIREBASE_AUTH_DOMAIN: ${VITE_FIREBASE_AUTH_DOMAIN}
        VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID}
        VITE_FIREBASE_STORAGE_BUCKET: ${VITE_FIREBASE_STORAGE_BUCKET}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${VITE_FIREBASE_MESSAGING_SENDER_ID}
        VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID}
        VITE_FIREBASE_MEASUREMENT_ID: ${VITE_FIREBASE_MEASUREMENT_ID}
        VITE_CLOUDINARY_CLOUD_NAME: ${VITE_CLOUDINARY_CLOUD_NAME}
        VITE_CLOUDINARY_UPLOAD_PRESET: ${VITE_CLOUDINARY_UPLOAD_PRESET}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount SSL certificates
      - ./ssl:/etc/ssl:ro
      - ./client/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      # Custom error pages
      - ./client/public/error.html:/usr/share/nginx/html/error.html:ro
    networks:
      - medusavr-network
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    # Security: Run as non-root user
    user: "101:101"  # nginx user
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run

  # Security: Add a reverse proxy with additional security features
  security-proxy:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./security/nginx-security.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - medusavr-network
      - security-network
    restart: always
    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run

networks:
  medusavr-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: medusavr-bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    # Network security
    internal: false
    attachable: false
  
  security-network:
    driver: bridge
    internal: true

# Security: Add secrets management
secrets:
  ssl_cert:
    file: ./ssl/medusavr.art.crt
  ssl_key:
    file: ./ssl/medusavr.art.key
